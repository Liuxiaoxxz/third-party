// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.20.3
// source: grpc_client.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orig  *ExportMetricsServiceRequest `protobuf:"bytes,1,opt,name=orig,proto3" json:"orig,omitempty"`
	State int32                        `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	mi := &file_grpc_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{0}
}

func (x *ExportRequest) GetOrig() *ExportMetricsServiceRequest {
	if x != nil {
		return x.Orig
	}
	return nil
}

func (x *ExportRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orig  *ExportMetricsServiceRequest `protobuf:"bytes,1,opt,name=orig,proto3" json:"orig,omitempty"`
	State int32                        `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	mi := &file_grpc_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{1}
}

func (x *ExportResponse) GetOrig() *ExportMetricsServiceRequest {
	if x != nil {
		return x.Orig
	}
	return nil
}

func (x *ExportResponse) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 定义 CPU 结构体
type CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessCpu    float64 `protobuf:"fixed64,1,opt,name=processCpu,proto3" json:"processCpu,omitempty"`
	AvgSystemCpu  float64 `protobuf:"fixed64,2,opt,name=avgSystemCpu,proto3" json:"avgSystemCpu,omitempty"`
	SystemCpu     float64 `protobuf:"fixed64,3,opt,name=systemCpu,proto3" json:"systemCpu,omitempty"`
	AvgProcessCpu float64 `protobuf:"fixed64,4,opt,name=avgProcessCpu,proto3" json:"avgProcessCpu,omitempty"`
}

func (x *CPU) Reset() {
	*x = CPU{}
	mi := &file_grpc_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{2}
}

func (x *CPU) GetProcessCpu() float64 {
	if x != nil {
		return x.ProcessCpu
	}
	return 0
}

func (x *CPU) GetAvgSystemCpu() float64 {
	if x != nil {
		return x.AvgSystemCpu
	}
	return 0
}

func (x *CPU) GetSystemCpu() float64 {
	if x != nil {
		return x.SystemCpu
	}
	return 0
}

func (x *CPU) GetAvgProcessCpu() float64 {
	if x != nil {
		return x.AvgProcessCpu
	}
	return 0
}

// 定义 ThreadInfos 结构体
type ThreadInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockNames  []string `protobuf:"bytes,1,rep,name=lockNames,proto3" json:"lockNames,omitempty"`
	ThreadInfo []string `protobuf:"bytes,2,rep,name=threadInfo,proto3" json:"threadInfo,omitempty"` // 这里使用 repeated repeated 来表示二维数组
}

func (x *ThreadInfos) Reset() {
	*x = ThreadInfos{}
	mi := &file_grpc_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfos) ProtoMessage() {}

func (x *ThreadInfos) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfos.ProtoReflect.Descriptor instead.
func (*ThreadInfos) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{3}
}

func (x *ThreadInfos) GetLockNames() []string {
	if x != nil {
		return x.LockNames
	}
	return nil
}

func (x *ThreadInfos) GetThreadInfo() []string {
	if x != nil {
		return x.ThreadInfo
	}
	return nil
}

// 定义 Thread 结构体
type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadCount             int64        `protobuf:"varint,1,opt,name=threadCount,proto3" json:"threadCount,omitempty"`
	ThreadInfos             *ThreadInfos `protobuf:"bytes,2,opt,name=threadInfos,proto3" json:"threadInfos,omitempty"`
	TotalStartedThreadCount int32        `protobuf:"varint,3,opt,name=totalStartedThreadCount,proto3" json:"totalStartedThreadCount,omitempty"`
	PeakThreadCount         int64        `protobuf:"varint,4,opt,name=peakThreadCount,proto3" json:"peakThreadCount,omitempty"`
	DeamonThreadCount       int64        `protobuf:"varint,5,opt,name=deamonThreadCount,proto3" json:"deamonThreadCount,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	mi := &file_grpc_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{4}
}

func (x *Thread) GetThreadCount() int64 {
	if x != nil {
		return x.ThreadCount
	}
	return 0
}

func (x *Thread) GetThreadInfos() *ThreadInfos {
	if x != nil {
		return x.ThreadInfos
	}
	return nil
}

func (x *Thread) GetTotalStartedThreadCount() int32 {
	if x != nil {
		return x.TotalStartedThreadCount
	}
	return 0
}

func (x *Thread) GetPeakThreadCount() int64 {
	if x != nil {
		return x.PeakThreadCount
	}
	return 0
}

func (x *Thread) GetDeamonThreadCount() int64 {
	if x != nil {
		return x.DeamonThreadCount
	}
	return 0
}

// 定义 MemoryUsage 结构体
type MemoryUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Init      int64 `protobuf:"varint,1,opt,name=init,proto3" json:"init,omitempty"`
	Committed int64 `protobuf:"varint,2,opt,name=committed,proto3" json:"committed,omitempty"`
	Max       int64 `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Used      int64 `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	mi := &file_grpc_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUsage.ProtoReflect.Descriptor instead.
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{5}
}

func (x *MemoryUsage) GetInit() int64 {
	if x != nil {
		return x.Init
	}
	return 0
}

func (x *MemoryUsage) GetCommitted() int64 {
	if x != nil {
		return x.Committed
	}
	return 0
}

func (x *MemoryUsage) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *MemoryUsage) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

// 定义 MemoryPool 结构体
type MemoryPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryUsages map[string]*MemoryUsage `protobuf:"bytes,1,rep,name=memoryUsages,proto3" json:"memoryUsages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MemoryPool) Reset() {
	*x = MemoryPool{}
	mi := &file_grpc_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryPool) ProtoMessage() {}

func (x *MemoryPool) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryPool.ProtoReflect.Descriptor instead.
func (*MemoryPool) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{6}
}

func (x *MemoryPool) GetMemoryUsages() map[string]*MemoryUsage {
	if x != nil {
		return x.MemoryUsages
	}
	return nil
}

// 定义 GarbageCollectorInfo 结构体
type GarbageCollectorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid           bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	CollectionTime  int32    `protobuf:"varint,2,opt,name=collectionTime,proto3" json:"collectionTime,omitempty"`
	MemoryPoolNames []string `protobuf:"bytes,3,rep,name=memoryPoolNames,proto3" json:"memoryPoolNames,omitempty"`
	CollectionCount uint64   `protobuf:"varint,4,opt,name=collectionCount,proto3" json:"collectionCount,omitempty"`
	Name            string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GarbageCollectorInfo) Reset() {
	*x = GarbageCollectorInfo{}
	mi := &file_grpc_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbageCollectorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollectorInfo) ProtoMessage() {}

func (x *GarbageCollectorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollectorInfo.ProtoReflect.Descriptor instead.
func (*GarbageCollectorInfo) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{7}
}

func (x *GarbageCollectorInfo) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *GarbageCollectorInfo) GetCollectionTime() int32 {
	if x != nil {
		return x.CollectionTime
	}
	return 0
}

func (x *GarbageCollectorInfo) GetMemoryPoolNames() []string {
	if x != nil {
		return x.MemoryPoolNames
	}
	return nil
}

func (x *GarbageCollectorInfo) GetCollectionCount() uint64 {
	if x != nil {
		return x.CollectionCount
	}
	return 0
}

func (x *GarbageCollectorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 定义 GarbageCollector 结构体
type GarbageCollector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GarbageCollectors map[string]*GarbageCollectorInfo `protobuf:"bytes,1,rep,name=garbageCollectors,proto3" json:"garbageCollectors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GarbageCollector) Reset() {
	*x = GarbageCollector{}
	mi := &file_grpc_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbageCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollector) ProtoMessage() {}

func (x *GarbageCollector) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollector.ProtoReflect.Descriptor instead.
func (*GarbageCollector) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{8}
}

func (x *GarbageCollector) GetGarbageCollectors() map[string]*GarbageCollectorInfo {
	if x != nil {
		return x.GarbageCollectors
	}
	return nil
}

// 定义 DatabaseConnectionMessage 结构体
type DatabaseConnectionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeakSuspicious                 []string `protobuf:"bytes,1,rep,name=leakSuspicious,proto3" json:"leakSuspicious,omitempty"`
	DatabaseConnectionMessageArray []string `protobuf:"bytes,2,rep,name=databaseConnectionMessageArray,proto3" json:"databaseConnectionMessageArray,omitempty"`
}

func (x *DatabaseConnectionMessage) Reset() {
	*x = DatabaseConnectionMessage{}
	mi := &file_grpc_client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseConnectionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseConnectionMessage) ProtoMessage() {}

func (x *DatabaseConnectionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseConnectionMessage.ProtoReflect.Descriptor instead.
func (*DatabaseConnectionMessage) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{9}
}

func (x *DatabaseConnectionMessage) GetLeakSuspicious() []string {
	if x != nil {
		return x.LeakSuspicious
	}
	return nil
}

func (x *DatabaseConnectionMessage) GetDatabaseConnectionMessageArray() []string {
	if x != nil {
		return x.DatabaseConnectionMessageArray
	}
	return nil
}

// 定义 BufferPool 结构体
type BufferPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapped *BufferPool_Mapped `protobuf:"bytes,1,opt,name=mapped,proto3" json:"mapped,omitempty"`
	Direct *BufferPool_Direct `protobuf:"bytes,2,opt,name=direct,proto3" json:"direct,omitempty"`
}

func (x *BufferPool) Reset() {
	*x = BufferPool{}
	mi := &file_grpc_client_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferPool) ProtoMessage() {}

func (x *BufferPool) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferPool.ProtoReflect.Descriptor instead.
func (*BufferPool) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{10}
}

func (x *BufferPool) GetMapped() *BufferPool_Mapped {
	if x != nil {
		return x.Mapped
	}
	return nil
}

func (x *BufferPool) GetDirect() *BufferPool_Direct {
	if x != nil {
		return x.Direct
	}
	return nil
}

type ExportMetricsServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferPool                *BufferPool                `protobuf:"bytes,1,opt,name=bufferPool,proto3" json:"bufferPool,omitempty"`
	AgentId                   string                     `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CreationTime              string                     `protobuf:"bytes,3,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	AppName                   string                     `protobuf:"bytes,4,opt,name=appName,proto3" json:"appName,omitempty"`
	AppStartTime              string                     `protobuf:"bytes,5,opt,name=appStartTime,proto3" json:"appStartTime,omitempty"`
	Cpu                       *CPU                       `protobuf:"bytes,6,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Pid                       string                     `protobuf:"bytes,7,opt,name=pid,proto3" json:"pid,omitempty"`
	Thread                    *Thread                    `protobuf:"bytes,8,opt,name=thread,proto3" json:"thread,omitempty"`
	MemoryPool                *MemoryPool                `protobuf:"bytes,9,opt,name=memoryPool,proto3" json:"memoryPool,omitempty"`
	Version                   string                     `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	Docker                    bool                       `protobuf:"varint,11,opt,name=docker,proto3" json:"docker,omitempty"`
	GarbageCollector          *GarbageCollector          `protobuf:"bytes,12,opt,name=garbageCollector,proto3" json:"garbageCollector,omitempty"`
	MultiAgentId              string                     `protobuf:"bytes,13,opt,name=multiAgentId,proto3" json:"multiAgentId,omitempty"`
	DatabaseConnectionMessage *DatabaseConnectionMessage `protobuf:"bytes,14,opt,name=databaseConnectionMessage,proto3" json:"databaseConnectionMessage,omitempty"`
	Status                    int32                      `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExportMetricsServiceRequest) Reset() {
	*x = ExportMetricsServiceRequest{}
	mi := &file_grpc_client_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportMetricsServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportMetricsServiceRequest) ProtoMessage() {}

func (x *ExportMetricsServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportMetricsServiceRequest.ProtoReflect.Descriptor instead.
func (*ExportMetricsServiceRequest) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{11}
}

func (x *ExportMetricsServiceRequest) GetBufferPool() *BufferPool {
	if x != nil {
		return x.BufferPool
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetAppStartTime() string {
	if x != nil {
		return x.AppStartTime
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetCpu() *CPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetMemoryPool() *MemoryPool {
	if x != nil {
		return x.MemoryPool
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetDocker() bool {
	if x != nil {
		return x.Docker
	}
	return false
}

func (x *ExportMetricsServiceRequest) GetGarbageCollector() *GarbageCollector {
	if x != nil {
		return x.GarbageCollector
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetMultiAgentId() string {
	if x != nil {
		return x.MultiAgentId
	}
	return ""
}

func (x *ExportMetricsServiceRequest) GetDatabaseConnectionMessage() *DatabaseConnectionMessage {
	if x != nil {
		return x.DatabaseConnectionMessage
	}
	return nil
}

func (x *ExportMetricsServiceRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ExportMetricsPartialSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RejectedLogRecords int64  `protobuf:"varint,1,opt,name=RejectedLogRecords,proto3" json:"RejectedLogRecords,omitempty"`
	ErrorMessage       string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ExportMetricsPartialSuccess) Reset() {
	*x = ExportMetricsPartialSuccess{}
	mi := &file_grpc_client_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportMetricsPartialSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportMetricsPartialSuccess) ProtoMessage() {}

func (x *ExportMetricsPartialSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportMetricsPartialSuccess.ProtoReflect.Descriptor instead.
func (*ExportMetricsPartialSuccess) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{12}
}

func (x *ExportMetricsPartialSuccess) GetRejectedLogRecords() int64 {
	if x != nil {
		return x.RejectedLogRecords
	}
	return 0
}

func (x *ExportMetricsPartialSuccess) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BufferPool_Mapped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Used     int32 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	Capacity int32 `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *BufferPool_Mapped) Reset() {
	*x = BufferPool_Mapped{}
	mi := &file_grpc_client_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferPool_Mapped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferPool_Mapped) ProtoMessage() {}

func (x *BufferPool_Mapped) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferPool_Mapped.ProtoReflect.Descriptor instead.
func (*BufferPool_Mapped) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BufferPool_Mapped) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BufferPool_Mapped) GetUsed() int32 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *BufferPool_Mapped) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type BufferPool_Direct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Used     int32 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	Capacity int32 `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *BufferPool_Direct) Reset() {
	*x = BufferPool_Direct{}
	mi := &file_grpc_client_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferPool_Direct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferPool_Direct) ProtoMessage() {}

func (x *BufferPool_Direct) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_client_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferPool_Direct.ProtoReflect.Descriptor instead.
func (*BufferPool_Direct) Descriptor() ([]byte, []int) {
	return file_grpc_client_proto_rawDescGZIP(), []int{10, 1}
}

func (x *BufferPool_Direct) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BufferPool_Direct) GetUsed() int32 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *BufferPool_Direct) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

var File_grpc_client_proto protoreflect.FileDescriptor

var file_grpc_client_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x57, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6f,
	0x72, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6f,
	0x72, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x70, 0x75, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x76, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x76, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x70, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x70, 0x75, 0x22, 0x4b, 0x0a, 0x0b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xec, 0x01, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x38, 0x0a,
	0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x61, 0x6b, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x6d, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x65,
	0x61, 0x6d, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x65, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e,
	0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x4d, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x47, 0x61, 0x72, 0x62,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50,
	0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x10, 0x47, 0x61, 0x72, 0x62, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x11, 0x67,
	0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x1a, 0x5b, 0x0a, 0x16, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8b, 0x01, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x6b, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x6b, 0x53, 0x75, 0x73, 0x70,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x84,
	0x02, 0x0a, 0x0a, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2a, 0x0a,
	0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x1a, 0x4e, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x1a, 0x4e, 0x0a, 0x06, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0xc5, 0x04, 0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x6f,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x43, 0x50,
	0x55, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x10, 0x67, 0x61, 0x72, 0x62,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x19, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x19, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a,
	0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x6f, 0x0a, 0x04, 0x47, 0x72, 0x70, 0x63, 0x12, 0x29, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x0e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_client_proto_rawDescOnce sync.Once
	file_grpc_client_proto_rawDescData = file_grpc_client_proto_rawDesc
)

func file_grpc_client_proto_rawDescGZIP() []byte {
	file_grpc_client_proto_rawDescOnce.Do(func() {
		file_grpc_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_client_proto_rawDescData)
	})
	return file_grpc_client_proto_rawDescData
}

var file_grpc_client_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_grpc_client_proto_goTypes = []any{
	(*ExportRequest)(nil),               // 0: ExportRequest
	(*ExportResponse)(nil),              // 1: ExportResponse
	(*CPU)(nil),                         // 2: CPU
	(*ThreadInfos)(nil),                 // 3: ThreadInfos
	(*Thread)(nil),                      // 4: Thread
	(*MemoryUsage)(nil),                 // 5: MemoryUsage
	(*MemoryPool)(nil),                  // 6: MemoryPool
	(*GarbageCollectorInfo)(nil),        // 7: GarbageCollectorInfo
	(*GarbageCollector)(nil),            // 8: GarbageCollector
	(*DatabaseConnectionMessage)(nil),   // 9: DatabaseConnectionMessage
	(*BufferPool)(nil),                  // 10: BufferPool
	(*ExportMetricsServiceRequest)(nil), // 11: ExportMetricsServiceRequest
	(*ExportMetricsPartialSuccess)(nil), // 12: ExportMetricsPartialSuccess
	nil,                                 // 13: MemoryPool.MemoryUsagesEntry
	nil,                                 // 14: GarbageCollector.GarbageCollectorsEntry
	(*BufferPool_Mapped)(nil),           // 15: BufferPool.Mapped
	(*BufferPool_Direct)(nil),           // 16: BufferPool.Direct
	(*emptypb.Empty)(nil),               // 17: google.protobuf.Empty
}
var file_grpc_client_proto_depIdxs = []int32{
	11, // 0: ExportRequest.orig:type_name -> ExportMetricsServiceRequest
	11, // 1: ExportResponse.orig:type_name -> ExportMetricsServiceRequest
	3,  // 2: Thread.threadInfos:type_name -> ThreadInfos
	13, // 3: MemoryPool.memoryUsages:type_name -> MemoryPool.MemoryUsagesEntry
	14, // 4: GarbageCollector.garbageCollectors:type_name -> GarbageCollector.GarbageCollectorsEntry
	15, // 5: BufferPool.mapped:type_name -> BufferPool.Mapped
	16, // 6: BufferPool.direct:type_name -> BufferPool.Direct
	10, // 7: ExportMetricsServiceRequest.bufferPool:type_name -> BufferPool
	2,  // 8: ExportMetricsServiceRequest.cpu:type_name -> CPU
	4,  // 9: ExportMetricsServiceRequest.thread:type_name -> Thread
	6,  // 10: ExportMetricsServiceRequest.memoryPool:type_name -> MemoryPool
	8,  // 11: ExportMetricsServiceRequest.garbageCollector:type_name -> GarbageCollector
	9,  // 12: ExportMetricsServiceRequest.databaseConnectionMessage:type_name -> DatabaseConnectionMessage
	5,  // 13: MemoryPool.MemoryUsagesEntry.value:type_name -> MemoryUsage
	7,  // 14: GarbageCollector.GarbageCollectorsEntry.value:type_name -> GarbageCollectorInfo
	0,  // 15: Grpc.Export:input_type -> ExportRequest
	17, // 16: Grpc.Unexported:input_type -> google.protobuf.Empty
	1,  // 17: Grpc.Export:output_type -> ExportResponse
	17, // 18: Grpc.Unexported:output_type -> google.protobuf.Empty
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_grpc_client_proto_init() }
func file_grpc_client_proto_init() {
	if File_grpc_client_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_client_proto_goTypes,
		DependencyIndexes: file_grpc_client_proto_depIdxs,
		MessageInfos:      file_grpc_client_proto_msgTypes,
	}.Build()
	File_grpc_client_proto = out.File
	file_grpc_client_proto_rawDesc = nil
	file_grpc_client_proto_goTypes = nil
	file_grpc_client_proto_depIdxs = nil
}
